{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger PostComments - OpenAPI 3.0",
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\\n\\n_If you're looking for the Swagger 2.0/OAS 2.0 version of PostComments, then click [here](https://editor.swagger.io/?url=https://PostComments.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load PostComments OAS 2.0` menu option!_\\n\\nSome useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-PostComments)\\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-PostComments/blob/master/src/main/resources/openapi.yaml)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://www.example.com/support",
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/posts/{postId}/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Comments List of Post",
                "description": "Return list of comments from specific post",
                "operationId": "getCommentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Add new comment to the post",
                "description": "Create new comment on the post",
                "operationId": "createNewComment",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "post_auth": [
                            "write:posts",
                            "read:posts"
                        ]
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/posts/{postId}/comments/{commentId}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Comment Details from Specific Post",
                "description": "Return a single comment",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update an existing comment",
                "description": "Update an existing comment by ID from specific post",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "post_auth": [
                            "write:posts",
                            "read:posts"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Deletes a comment",
                "description": "Delete a comment by ID from specific post",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success deleted"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get List of Post",
                "description": "Return list of posts",
                "operationId": "getPostsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Add new post",
                "description": "Create new post",
                "operationId": "createNewPost",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "post_auth": [
                            "write:posts",
                            "read:posts"
                        ]
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Post Details",
                "description": "Return a single post",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update an existing post",
                "description": "Update an existing post by ID",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "post_auth": [
                            "write:posts",
                            "read:posts"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Deletes a post",
                "description": "Delete a post by ID",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success deleted"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "required": [
                    "id",
                    "message",
                    "post_id"
                ],
                "properties": {
                    "id": {
                        "description": "Comment ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 27
                    },
                    "message": {
                        "description": "Message of the comment",
                        "type": "string",
                        "example": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Maiores quod sequi et modi."
                    },
                    "post_id": {
                        "description": "Post ID of the comment",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "created_at": {
                        "description": "Date time of the post creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-21 13:08:19"
                    },
                    "updated_at": {
                        "description": "Date time of post updating",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-21 13:08:19"
                    }
                },
                "type": "object"
            },
            "Post": {
                "required": [
                    "id",
                    "title",
                    "text"
                ],
                "properties": {
                    "id": {
                        "description": "Post ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "title": {
                        "description": "Title of the post",
                        "type": "string",
                        "example": "Run in the rain"
                    },
                    "text": {
                        "description": "Content or text of the post",
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur nostrum nam unde praesentium officia, minus, adipisci expedita nulla, similique eum voluptas. Ea, debitis."
                    },
                    "created_at": {
                        "description": "Date time of the post creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-21 13:08:19"
                    },
                    "updated_at": {
                        "description": "Date time of post updating",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-21 13:08:19"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "post_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:posts": "modify posts in your account",
                            "read:posts": "read your posts"
                        }
                    }
                }
            },
            "api_key": {
                "type": "apiKey",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Post",
            "description": "Access to Post",
            "externalDocs": {
                "description": "Find out more about Post",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Comment",
            "description": "Everything about Comments of Post",
            "externalDocs": {
                "description": "Find out more about Comment",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Authorization",
            "description": "Operations about user"
        }
    ]
}